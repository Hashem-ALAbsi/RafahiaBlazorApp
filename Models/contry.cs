//// <auto-generated />
////
//// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
////
////    using QuickType;
////
////    var yemenInfo = YemenInfo.FromJson(jsonString);

//namespace QuickType
//{
//    using System;
//    using System.Collections.Generic;

//    using System.Globalization;
//    using Newtonsoft.Json;
//    using Newtonsoft.Json.Converters;
//    using Microsoft.Azure.Mobile.Server;

//    public partial class YemenInfo : EntityData
//    {
//        [JsonProperty("english_name")]
//        public string EnglishName { get; set; }

//        [JsonProperty("arabic_name")]
//        public string ArabicName { get; set; }

//        [JsonProperty("iso3")]
//        public string Iso3 { get; set; }

//        [JsonProperty("iso2")]
//        public string Iso2 { get; set; }

//        [JsonProperty("phone_code")]
//        [JsonConverter(typeof(ParseStringConverter))]
//        public long PhoneCode { get; set; }

//        [JsonProperty("capital_english")]
//        public string CapitalEnglish { get; set; }

//        [JsonProperty("capital_arabic")]
//        public string CapitalArabic { get; set; }

//        [JsonProperty("area_in_kilometer_square")]
//        [JsonConverter(typeof(ParseStringConverter))]
//        public long AreaInKilometerSquare { get; set; }

//        [JsonProperty("currency")]
//        public string Currency { get; set; }

//        [JsonProperty("currency_name_en")]
//        public string CurrencyNameEn { get; set; }

//        [JsonProperty("currency_name_ar")]
//        public string CurrencyNameAr { get; set; }

//        [JsonProperty("currency_symbol")]
//        public string CurrencySymbol { get; set; }

//        [JsonProperty("tld")]
//        public string Tld { get; set; }

//        [JsonProperty("region")]
//        public string Region { get; set; }

//        [JsonProperty("subregion")]
//        public string Subregion { get; set; }

//        [JsonProperty("timezones")]
//        public Timezone[] Timezones { get; set; }

//        [JsonProperty("translations")]
//        public Translations Translations { get; set; }

//        [JsonProperty("latitude")]
//        public string Latitude { get; set; }

//        [JsonProperty("longitude")]
//        public string Longitude { get; set; }

//        [JsonProperty("emoji")]
//        public string Emoji { get; set; }

//        [JsonProperty("emojiU")]
//        public string EmojiU { get; set; }

//        [JsonProperty("governorates")]
//        public Governorate[] Governorates { get; set; }
//    }

//    public partial class Governorate : EntityData
//    {
//        [JsonProperty("id")]
//        public long Id { get; set; }

//        [JsonProperty("name_en")]
//        public string NameEn { get; set; }

//        [JsonProperty("name_ar")]
//        public string NameAr { get; set; }

//        [JsonProperty("name_ar_tashkeel")]
//        public string NameArTashkeel { get; set; }

//        [JsonProperty("phone_numbering_plan")]
//        public string PhoneNumberingPlan { get; set; }

//        [JsonProperty("capital_name_ar")]
//        public string CapitalNameAr { get; set; }

//        [JsonProperty("capital_name_en")]
//        public string CapitalNameEn { get; set; }

//        [JsonProperty("name_ar_normalized")]
//        public string NameArNormalized { get; set; }

//        [JsonProperty("name_en_normalized")]
//        public string NameEnNormalized { get; set; }

//        [JsonProperty("districts")]
//        public District[] Districts { get; set; }
//    }

//    public partial class District : EntityData
//    {
//        [JsonProperty("id")]
//        public long Id { get; set; }

//        [JsonProperty("name_en")]
//        public string NameEn { get; set; }

//        [JsonProperty("name_ar")]
//        public string NameAr { get; set; }

//        [JsonProperty("name_ar_tashkeel")]
//        public string NameArTashkeel { get; set; }

//        [JsonProperty("name_ar_normalized")]
//        public string NameArNormalized { get; set; }

//        [JsonProperty("name_en_normalized")]
//        public string NameEnNormalized { get; set; }

//        [JsonProperty("uzaal", NullValueHandling = NullValueHandling.Ignore)]
//        public Uzaal[] Uzaal { get; set; }
//    }

//    public partial class Uzaal : EntityData
//    {
//        [JsonProperty("id")]
//        public long Id { get; set; }

//        [JsonProperty("name_en")]
//        public string NameEn { get; set; }

//        [JsonProperty("name_ar")]
//        public string NameAr { get; set; }

//        [JsonProperty("name_ar_normalized")]
//        public string NameArNormalized { get; set; }

//        [JsonProperty("name_en_normalized")]
//        public string NameEnNormalized { get; set; }

//        [JsonProperty("villages", NullValueHandling = NullValueHandling.Ignore)]
//        public Uzaal[] Villages { get; set; }
//    }

//    public partial class Timezone : EntityData
//    {
//        [JsonProperty("zoneName")]
//        public string ZoneName { get; set; }

//        [JsonProperty("gmtOffset")]
//        public long GmtOffset { get; set; }

//        [JsonProperty("gmtOffsetName")]
//        public string GmtOffsetName { get; set; }

//        [JsonProperty("abbreviation")]
//        public string Abbreviation { get; set; }

//        [JsonProperty("tzName")]
//        public string TzName { get; set; }
//    }

//    public partial class Translations : EntityData
//    {
//        [JsonProperty("kr")]
//        public string Kr { get; set; }

//        [JsonProperty("br")]
//        public string Br { get; set; }

//        [JsonProperty("pt")]
//        public string Pt { get; set; }

//        [JsonProperty("nl")]
//        public string Nl { get; set; }

//        [JsonProperty("hr")]
//        public string Hr { get; set; }

//        [JsonProperty("fa")]
//        public string Fa { get; set; }

//        [JsonProperty("de")]
//        public string De { get; set; }

//        [JsonProperty("es")]
//        public string Es { get; set; }

//        [JsonProperty("fr")]
//        public string Fr { get; set; }

//        [JsonProperty("ja")]
//        public string Ja { get; set; }

//        [JsonProperty("it")]
//        public string It { get; set; }

//        [JsonProperty("cn")]
//        public string Cn { get; set; }

//        [JsonProperty("tr")]
//        public string Tr { get; set; }
//    }

//    public partial class YemenInfo : EntityData
//    {
//        public static YemenInfo FromJson(string json) => JsonConvert.DeserializeObject<YemenInfo>(json, QuickType.Converter.Settings);
//    }

//    public static class Serialize
//    {
//        public static string ToJson(this YemenInfo self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
//    }

//    internal static class Converter
//    {
//        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
//        {
//            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
//            DateParseHandling = DateParseHandling.None,
//            Converters =
//            {
//                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
//            },
//        };
//    }

//    internal class ParseStringConverter : JsonConverter
//    {
//        public override bool CanConvert(Type t) => t == typeof(long) || t == typeof(long?);

//        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
//        {
//            if (reader.TokenType == JsonToken.Null) return null;
//            var value = serializer.Deserialize<string>(reader);
//            long l;
//            if (Int64.TryParse(value, out l))
//            {
//                return l;
//            }
//            throw new Exception("Cannot unmarshal type long");
//        }

//        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
//        {
//            if (untypedValue == null)
//            {
//                serializer.Serialize(writer, null);
//                return;
//            }
//            var value = (long)untypedValue;
//            serializer.Serialize(writer, value.ToString());
//            return;
//        }

//        public static readonly ParseStringConverter Singleton = new ParseStringConverter();
//    }
//}
