@page "/register" 

@*@rendermode InteractiveServer*@

<div class = "container">
	<div class="row">
		<div class="col-sm-4">
			<h2>Register</h2>
			<EditForm Model="@Register" OnValidSubmit="RegisterClicked">
				<DataAnnotationsValidator/>
				<div class="form-group">
					<lable class="form-label">First Name</lable>
					<InputText @bind-Value="Register.FirstName" class="form-control"></InputText>
				</div>
				<div class="form-group">
					<lable class="form-label">Last Name</lable>
					<InputText @bind-Value="Register.LastName" class="form-control"></InputText>
				</div>
				<div class="form-group">
					<lable class="form-label">User Name</lable>
					<InputText @bind-Value="Register.Username" class="form-control"></InputText>
				</div>
				<div class="form-group">
					<lable class="form-label">Email</lable>
					<InputText @bind-Value="Register.Email" class="form-control"></InputText>
				</div>
				<div class="form-group">
					<lable class="form-label">Password</lable>
					<InputText @bind-Value="Register.Password" class="form-control"></InputText>
				</div>
				<div class="form-group">
					<lable class="form-label">Phone</lable>
					<InputText @bind-Value="Register.PhoneNumber" class="form-control"></InputText>
				</div>
				<div class="form-group mt-3">
					<button class="btn btn-primary" type="submit">Register</button>
				</div>
				<ValidationSummary/>
			</EditForm>
		</div>

	</div>

</div>

@code {

	public RegisterModel Register = new();

	async Task RegisterClicked()
	{
		AuthModel response = await authService.RegisterAsync(Register);
		if (!response.IsAuthenticated)
		{
			await js.InvokeVoidAsync("alert", response.Message);
			return;
		}

		NavManager.NavigateTo("/userindex", forceLoad: true);

	}
}
